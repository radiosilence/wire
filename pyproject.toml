[project]
name = "wire"
version = "2.0.0"
description = "Secure messaging platform for activists with end-to-end encryption"
authors = [
    { name = "Wire Contributors", email = "contact@example.com" }
]
readme = "README.rst"
license = { text = "MIT" }
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Security :: Cryptography",
]
dependencies = [
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.25.0",
    "redis[hiredis]>=5.0.0",
    "cryptography>=41.0.0",
    "markdown>=3.5.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "httpx>=0.26.0",
    "websockets>=12.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "slowapi>=0.1.9",
    "aiocache>=0.12.2",
    "orjson>=3.9.10",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.8.0",
    "ruff>=0.1.0",
    "black>=23.12.0",
    "pre-commit>=3.6.0",
    "types-redis>=4.6.0",
    "types-markdown>=3.5.0",
    "types-passlib>=1.7.7",
    "types-python-jose>=3.3.0",
    "types-aiofiles>=23.2.0",
    "httpx-ws>=0.5.2",
]

[project.scripts]
wire = "wire.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise from
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=wire --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.coverage.run]
source = ["wire"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true